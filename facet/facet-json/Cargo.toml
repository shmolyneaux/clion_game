[package]
name = "facet-json"
version = "0.24.15"
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
description = "A JSON deserializer and serializer for the facet ecosystem"
keywords = ["json", "serialization", "deserialization", "reflection", "facet"]
categories = ["encoding", "parser-implementations"]

[features]
rich-diagnostics = ["facet-deserialize/rich-diagnostics"]
default = ["rich-diagnostics"]

[dependencies]
facet-core = { version = "0.27.14", path = "../facet-core", default-features = false }
facet-deserialize = { version = "0.24.20", path = "../facet-deserialize", default-features = false }
facet-reflect = { version = "0.27.14", path = "../facet-reflect", default-features = false }
facet-serialize = { version = "0.24.15", path = "../facet-serialize", default-features = false }
itoa = "1.0.15"
log = "0.4.27"
ryu = "1"

[dev-dependencies]
bytes = { version = "1.10.1" }
camino = { version = "1" }
eyre = "0.6.12"
facet = { path = "../facet" }
facet-core = { version = "0.27.14", path = "../facet-core", features = [
    "bytes",
    "camino",
    "time",
    "chrono",
    "ulid",
    "uuid",
    "jiff02",
    "ordered-float",
] }
facet-testhelpers = { path = "../facet-testhelpers" }
insta = "1.43.1"
time = { version = "0.3.41", features = ["macros"] }
chrono = { version = "0.4", default-features = false }
ulid = { version = "1.2.1" }
uuid = { version = "1.16.0" }
jiff = "0.2.13"
ordered-float = "5.0.0"
