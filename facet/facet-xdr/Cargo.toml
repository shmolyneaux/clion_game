[package]
name = "facet-xdr"
version = "0.1.16"
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true
description = "XDR serialization and deserialization for Facet types"
keywords = ["xdr", "serialization", "deserialization", "reflection", "facet"]
categories = ["encoding", "parsing", "data-structures"]

[features]
std = ["alloc", "facet-core/std", "facet-reflect/std", "facet-serialize/std"]
alloc = ["facet-core/alloc", "facet-reflect/alloc", "facet-serialize/alloc"]
default = ["std"]

[dependencies]
facet-core = { version = "0.27.14", path = "../facet-core", default-features = false }
facet-reflect = { version = "0.27.14", path = "../facet-reflect", default-features = false }
facet-serialize = { version = "0.24.15", path = "../facet-serialize", default-features = false }

[dev-dependencies]
facet = { path = "../facet" }
facet-testhelpers = { path = "../facet-testhelpers" }
