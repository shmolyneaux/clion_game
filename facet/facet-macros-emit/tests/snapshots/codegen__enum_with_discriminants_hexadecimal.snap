---
source: facet-macros-emit/tests/codegen.rs
expression: "expand(r#\"\n        #[repr(u16)]\n        #[derive(Facet)]\n        enum Color {\n          Red      = 0x01,\n          Blue     = 0x7F,\n          Green    = 0x80,\n          Yellow   = 0x10,\n          Magenta  = 0xfeed,\n          Cyan     = 0xBEEF,\n        }\n        \"#)"
---
#[used]
static COLOR_SHAPE: &'static ::facet::Shape = <Color as ::facet::Facet>::SHAPE;
#[automatically_derived]
unsafe impl<'__facet> ::facet::Facet<'__facet> for Color {
    const SHAPE: &'static ::facet::Shape = &const {
        let __facet_variants: &'static [::facet::Variant] = &const {
            [
                ::facet::Variant::builder()
                    .name("Red")
                    .discriminant(1)
                    .fields(::facet::StructDef::builder().unit().build())
                    .build(),
                ::facet::Variant::builder()
                    .name("Blue")
                    .discriminant(127)
                    .fields(::facet::StructDef::builder().unit().build())
                    .build(),
                ::facet::Variant::builder()
                    .name("Green")
                    .discriminant(128)
                    .fields(::facet::StructDef::builder().unit().build())
                    .build(),
                ::facet::Variant::builder()
                    .name("Yellow")
                    .discriminant(16)
                    .fields(::facet::StructDef::builder().unit().build())
                    .build(),
                ::facet::Variant::builder()
                    .name("Magenta")
                    .discriminant(65261)
                    .fields(::facet::StructDef::builder().unit().build())
                    .build(),
                ::facet::Variant::builder()
                    .name("Cyan")
                    .discriminant(48879)
                    .fields(::facet::StructDef::builder().unit().build())
                    .build(),
            ]
        };
        ::facet::Shape::builder()
            .id(::facet::ConstTypeId::of::<Self>())
            .layout(::core::alloc::Layout::new::<Self>())
            .vtable(::facet::value_vtable!(Self, |f, _opts| {
                ::core::fmt::Write::write_str(f, "Color")
            }))
            .def(::facet::Def::Enum(
                ::facet::EnumDef::builder()
                    .variants(__facet_variants)
                    .repr(::facet::EnumRepr::U16)
                    .build(),
            ))
            .build()
    };
}
