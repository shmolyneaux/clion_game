---
source: facet-macros-emit/tests/codegen.rs
expression: "expand(r#\"\n        #[repr(u32)]\n        #[derive(Facet)]\n        enum Status {\n            Ok = 1,\n            Warn = 0xA,\n            Error = 0b1111,\n            Timeout = 0o77,\n        }\n        \"#)"
---
#[used]
static STATUS_SHAPE: &'static ::facet::Shape = <Status as ::facet::Facet>::SHAPE;
#[automatically_derived]
unsafe impl<'__facet> ::facet::Facet<'__facet> for Status {
    const SHAPE: &'static ::facet::Shape = &const {
        let __facet_variants: &'static [::facet::Variant] = &const {
            [
                ::facet::Variant::builder()
                    .name("Ok")
                    .discriminant(1)
                    .fields(::facet::StructDef::builder().unit().build())
                    .build(),
                ::facet::Variant::builder()
                    .name("Warn")
                    .discriminant(10)
                    .fields(::facet::StructDef::builder().unit().build())
                    .build(),
                ::facet::Variant::builder()
                    .name("Error")
                    .discriminant(15)
                    .fields(::facet::StructDef::builder().unit().build())
                    .build(),
                ::facet::Variant::builder()
                    .name("Timeout")
                    .discriminant(63)
                    .fields(::facet::StructDef::builder().unit().build())
                    .build(),
            ]
        };
        ::facet::Shape::builder()
            .id(::facet::ConstTypeId::of::<Self>())
            .layout(::core::alloc::Layout::new::<Self>())
            .vtable(::facet::value_vtable!(Self, |f, _opts| {
                ::core::fmt::Write::write_str(f, "Status")
            }))
            .def(::facet::Def::Enum(
                ::facet::EnumDef::builder()
                    .variants(__facet_variants)
                    .repr(::facet::EnumRepr::U32)
                    .build(),
            ))
            .build()
    };
}
