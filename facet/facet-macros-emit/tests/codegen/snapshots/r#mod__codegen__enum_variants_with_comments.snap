---
source: facet-macros-emit/tests/codegen/mod.rs
expression: "expand(r#\"\n        #[derive(Facet)]\n        #[repr(u8)]\n        enum CommentedEnum {\n            /// This is variant A\n            #[allow(dead_code)]\n            A,\n            /// This is variant B\n            /// with multiple lines\n            #[allow(dead_code)]\n            B(u32),\n            /// This is variant C\n            /// which has named fields\n            #[allow(dead_code)]\n            C {\n                /// This is field x\n                x: u32,\n                /// This is field y\n                y: String,\n            },\n        }\n        \"#)"
---
static COMMENTED_ENUM_SHAPE: &'static ::facet::Shape = <CommentedEnum as ::facet::Facet>::SHAPE;
#[automatically_derived]
#[allow(non_camel_case_types)]
unsafe impl<'__facet> ::facet::Facet<'__facet> for CommentedEnum {
    const VTABLE: &'static ::facet::ValueVTable = &const {
        ::facet::value_vtable!(Self, |f, _opts| ::core::fmt::Write::write_str(
            f,
            "CommentedEnum"
        ))
    };
    const SHAPE: &'static ::facet::Shape<'static> = &const {
        #[repr(C)]
        #[allow(non_snake_case, dead_code)]
        struct __Shadow_RustRepr_Tuple_for_CommentedEnum_B<'__facet> {
            _discriminant: u8,
            _phantom: ::core::marker::PhantomData<(*mut &'__facet ())>,
            _0: u32,
        }
        #[repr(C)]
        #[allow(non_snake_case, dead_code)]
        struct __Shadow_RustRepr_Struct_for_CommentedEnum_C<'__facet> {
            _discriminant: u8,
            _phantom: ::core::marker::PhantomData<(*mut &'__facet ())>,
            x: u32,
            y: String,
        }
        let __facet_variants: &'static [::facet::Variant] = &const {
            [
                ::facet::Variant::builder()
                    .name("A")
                    .discriminant(0i64 as i64)
                    .data(
                        ::facet::StructType::builder()
                            .repr(::facet::Repr::c())
                            .unit()
                            .build(),
                    )
                    .doc(&[" This is variant A"])
                    .build(),
                {
                    let fields: &'static [::facet::Field] = &const {
                        [{
                            ::facet::Field::builder()
                                .name("0")
                                .shape(::facet::shape_of(
                                    &|s: &__Shadow_RustRepr_Tuple_for_CommentedEnum_B<'__facet>| {
                                        &s._0
                                    },
                                ))
                                .offset(::core::mem::offset_of!(
                                    __Shadow_RustRepr_Tuple_for_CommentedEnum_B<'__facet>,
                                    _0
                                ))
                                .build()
                        }]
                    };
                    ::facet::Variant::builder()
                        .name("B")
                        .discriminant(1i64 as i64)
                        .data(
                            ::facet::StructType::builder()
                                .repr(::facet::Repr::c())
                                .tuple()
                                .fields(fields)
                                .build(),
                        )
                        .doc(&[" This is variant B", " with multiple lines"])
                        .build()
                },
                {
                    let fields: &'static [::facet::Field] = &const {
                        [
                            {
                                ::facet::Field::builder()
                                    .name("x")
                                    .shape(::facet::shape_of(
                                        &|s: &__Shadow_RustRepr_Struct_for_CommentedEnum_C<
                                            '__facet,
                                        >| &s.x,
                                    ))
                                    .offset(::core::mem::offset_of!(
                                        __Shadow_RustRepr_Struct_for_CommentedEnum_C<'__facet>,
                                        x
                                    ))
                                    .doc(&[" This is field x"])
                                    .build()
                            },
                            {
                                ::facet::Field::builder()
                                    .name("y")
                                    .shape(::facet::shape_of(
                                        &|s: &__Shadow_RustRepr_Struct_for_CommentedEnum_C<
                                            '__facet,
                                        >| &s.y,
                                    ))
                                    .offset(::core::mem::offset_of!(
                                        __Shadow_RustRepr_Struct_for_CommentedEnum_C<'__facet>,
                                        y
                                    ))
                                    .doc(&[" This is field y"])
                                    .build()
                            },
                        ]
                    };
                    ::facet::Variant::builder()
                        .name("C")
                        .discriminant(2i64 as i64)
                        .data(
                            ::facet::StructType::builder()
                                .repr(::facet::Repr::c())
                                .struct_()
                                .fields(fields)
                                .build(),
                        )
                        .doc(&[" This is variant C", " which has named fields"])
                        .build()
                },
            ]
        };
        ::facet::Shape::builder_for_sized::<Self>()
            .type_identifier("CommentedEnum")
            .ty(::facet::Type::User(::facet::UserType::Enum(
                ::facet::EnumType::builder()
                    .variants(__facet_variants)
                    .repr(::facet::Repr::default())
                    .enum_repr(::facet::EnumRepr::U8)
                    .build(),
            )))
            .build()
    };
}
