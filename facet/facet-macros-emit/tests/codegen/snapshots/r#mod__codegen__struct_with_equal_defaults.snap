---
source: facet-macros-emit/tests/codegen/mod.rs
expression: "expand(r#\"\n        #[derive(Facet)]\n        struct StructWithDefaults {\n            field1: i32 = 42,\n            field2: String = \"default\".to_string(),\n        }\n        \"#)"
---
static STRUCT_WITH_DEFAULTS_SHAPE: &'static ::facet::Shape =
    <StructWithDefaults as ::facet::Facet>::SHAPE;
#[automatically_derived]
unsafe impl<'__facet> ::facet::Facet<'__facet> for StructWithDefaults {
    const VTABLE: &'static ::facet::ValueVTable = &const {
        let mut vtable = ::facet::value_vtable!(Self, |f, _opts| ::core::fmt::Write::write_str(
            f,
            "StructWithDefaults"
        ));
        vtable
    };
    const SHAPE: &'static ::facet::Shape<'static> = &const {
        let fields: &'static [::facet::Field] = &const {
            [
                {
                    ::facet::Field::builder()
                        .name("field1")
                        .shape(::facet::shape_of(&|s: &StructWithDefaults| &s.field1))
                        .offset(::core::mem::offset_of!(StructWithDefaults, field1))
                        .build()
                },
                {
                    ::facet::Field::builder()
                        .name("field2")
                        .shape(::facet::shape_of(&|s: &StructWithDefaults| &s.field2))
                        .offset(::core::mem::offset_of!(StructWithDefaults, field2))
                        .build()
                },
            ]
        };
        ::facet::Shape::builder_for_sized::<Self>()
            .type_identifier("StructWithDefaults")
            .ty(::facet::Type::User(::facet::UserType::Struct(
                ::facet::StructType::builder()
                    .repr(::facet::Repr::default())
                    .kind(::facet::StructKind::Struct)
                    .fields(fields)
                    .build(),
            )))
            .build()
    };
}
