---
source: facet-macros-emit/tests/codegen/mod.rs
expression: "expand(r#\"\n        #[derive(Facet)]\n        #[facet(rename_all = \"camelCase\")]\n        struct CamelCaseExample {\n            field_one: String,\n            field_two: String,\n        }\n        \"#)"
---
static CAMEL_CASE_EXAMPLE_SHAPE: &'static ::facet::Shape =
    <CamelCaseExample as ::facet::Facet>::SHAPE;
#[automatically_derived]
unsafe impl<'__facet> ::facet::Facet<'__facet> for CamelCaseExample {
    const VTABLE: &'static ::facet::ValueVTable = &const {
        let mut vtable = ::facet::value_vtable!(Self, |f, _opts| ::core::fmt::Write::write_str(
            f,
            "CamelCaseExample"
        ));
        vtable
    };
    const SHAPE: &'static ::facet::Shape<'static> = &const {
        let fields: &'static [::facet::Field] = &const {
            [
                {
                    ::facet::Field::builder()
                        .name("fieldOne")
                        .shape(::facet::shape_of(&|s: &CamelCaseExample| &s.field_one))
                        .offset(::core::mem::offset_of!(CamelCaseExample, field_one))
                        .build()
                },
                {
                    ::facet::Field::builder()
                        .name("fieldTwo")
                        .shape(::facet::shape_of(&|s: &CamelCaseExample| &s.field_two))
                        .offset(::core::mem::offset_of!(CamelCaseExample, field_two))
                        .build()
                },
            ]
        };
        ::facet::Shape::builder_for_sized::<Self>()
            .type_identifier("CamelCaseExample")
            .ty(::facet::Type::User(::facet::UserType::Struct(
                ::facet::StructType::builder()
                    .repr(::facet::Repr::default())
                    .kind(::facet::StructKind::Struct)
                    .fields(fields)
                    .build(),
            )))
            .build()
    };
}
